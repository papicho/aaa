{"ast":null,"code":"import _regeneratorRuntime from\"/Users/youneskhelil/Desktop/findar-backoffice-school/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/youneskhelil/Desktop/findar-backoffice-school/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";// in src/authProvider.js\nexport default{// called when the user attempts to log in\nlogin:function(){var _login=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var username,password,request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:username=_ref.username,password=_ref.password;request=new Request('https://findar-api-staging.herokuapp.com/user/login',{method:'POST',body:JSON.stringify({email:username,password}),headers:new Headers({'Content-Type':'application/json'})});console.log(username);console.log(password);//var fn = (username.match(/First Name:\\s*(.+)\\s+Last Name/i))[1]\n//localStorage.setItem('fn', fn);\nreturn _context.abrupt(\"return\",fetch(request).then(function(response){if(response.status<200||response.status>=300){throw new Error(response.statusText);}return response.json();}).then(function(_ref2){var token=_ref2.token;localStorage.setItem('token',token);console.log(token);}));case 5:case\"end\":return _context.stop();}}},_callee);}));function login(_x){return _login.apply(this,arguments);}return login;}(),// called when the user clicks on the logout button\nlogout:function logout(){localStorage.removeItem('username');localStorage.removeItem('token');return Promise.resolve();},// called when the API returns an error\ncheckError:function checkError(_ref3){var status=_ref3.status;if(status===401||status===403){localStorage.removeItem('username');return Promise.reject();}return Promise.resolve();},// called when the user navigates to a new location, to check for authentication\ncheckAuth:function checkAuth(){return localStorage.getItem('token')?Promise.resolve():Promise.reject();},// called when the user navigates to a new location, to check for permissions / roles\ngetPermissions:function getPermissions(){return Promise.resolve();}};","map":{"version":3,"sources":["/Users/youneskhelil/Desktop/findar-backoffice-school/src/Resources/authProvider.js"],"names":["login","username","password","request","Request","method","body","JSON","stringify","email","headers","Headers","console","log","fetch","then","response","status","Error","statusText","json","token","localStorage","setItem","logout","removeItem","Promise","resolve","checkError","reject","checkAuth","getItem","getPermissions"],"mappings":"mVACA;AACA,cAAe,CACX;AACAA,KAAK,+EAAE,qKAASC,QAAT,MAASA,QAAT,CAAmBC,QAAnB,MAAmBA,QAAnB,CACGC,OADH,CACa,GAAIC,CAAAA,OAAJ,CAAY,qDAAZ,CAAmE,CAC/EC,MAAM,CAAE,MADuE,CAE/EC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEC,KAAK,CAAER,QAAT,CAAmBC,QAAnB,CAAf,CAFyE,CAG/EQ,OAAO,CAAE,GAAIC,CAAAA,OAAJ,CAAY,CAAE,eAAgB,kBAAlB,CAAZ,CAHsE,CAAnE,CADb,CAMHC,OAAO,CAACC,GAAR,CAAYZ,QAAZ,EACAW,OAAO,CAACC,GAAR,CAAYX,QAAZ,EACA;AACA;AATG,gCAUIY,KAAK,CAACX,OAAD,CAAL,CACFY,IADE,CACG,SAAAC,QAAQ,CAAI,CACd,GAAIA,QAAQ,CAACC,MAAT,CAAkB,GAAlB,EAAyBD,QAAQ,CAACC,MAAT,EAAmB,GAAhD,CAAqD,CACjD,KAAM,IAAIC,CAAAA,KAAJ,CAAUF,QAAQ,CAACG,UAAnB,CAAN,CACH,CACD,MAAOH,CAAAA,QAAQ,CAACI,IAAT,EAAP,CACH,CANE,EAOFL,IAPE,CAOG,eAAe,IAAZM,CAAAA,KAAY,OAAZA,KAAY,CACjBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BF,KAA9B,EAEAT,OAAO,CAACC,GAAR,CAAYQ,KAAZ,EAEH,CAZE,CAVJ,wDAAF,2EAFM,CA2BX;AACAG,MAAM,CAAE,iBAAM,CACVF,YAAY,CAACG,UAAb,CAAwB,UAAxB,EACAH,YAAY,CAACG,UAAb,CAAwB,OAAxB,EAEA,MAAOC,CAAAA,OAAO,CAACC,OAAR,EAAP,CACH,CAjCU,CAkCX;AACAC,UAAU,CAAE,0BAAgB,IAAbX,CAAAA,MAAa,OAAbA,MAAa,CACxB,GAAIA,MAAM,GAAK,GAAX,EAAkBA,MAAM,GAAK,GAAjC,CAAsC,CAClCK,YAAY,CAACG,UAAb,CAAwB,UAAxB,EACA,MAAOC,CAAAA,OAAO,CAACG,MAAR,EAAP,CACH,CACD,MAAOH,CAAAA,OAAO,CAACC,OAAR,EAAP,CACH,CAzCU,CA0CX;AACAG,SAAS,CAAE,oBAAM,CACb,MAAOR,CAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EACDL,OAAO,CAACC,OAAR,EADC,CAEDD,OAAO,CAACG,MAAR,EAFN,CAGH,CA/CU,CAgDX;AACAG,cAAc,CAAE,gCAAMN,CAAAA,OAAO,CAACC,OAAR,EAAN,EAjDL,CAAf","sourcesContent":["\n// in src/authProvider.js\nexport default {\n    // called when the user attempts to log in\n    login: async ({ username, password }) => {\n        const request = new Request('https://findar-api-staging.herokuapp.com/user/login', {\n            method: 'POST',\n            body: JSON.stringify({ email: username, password }),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        });\n        console.log(username);\n        console.log(password);\n        //var fn = (username.match(/First Name:\\s*(.+)\\s+Last Name/i))[1]\n        //localStorage.setItem('fn', fn);\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then(({ token }) => {\n                localStorage.setItem('token', token);\n\n                console.log(token);\n\n            });\n\n    },\n    // called when the user clicks on the logout button\n    logout: () => {\n        localStorage.removeItem('username');\n        localStorage.removeItem('token');\n\n        return Promise.resolve();\n    },\n    // called when the API returns an error\n    checkError: ({ status }) => {\n        if (status === 401 || status === 403) {\n            localStorage.removeItem('username');\n            return Promise.reject();\n        }\n        return Promise.resolve();\n    },\n    // called when the user navigates to a new location, to check for authentication\n    checkAuth: () => {\n        return localStorage.getItem('token')\n            ? Promise.resolve()\n            : Promise.reject();\n    },\n    // called when the user navigates to a new location, to check for permissions / roles\n    getPermissions: () => Promise.resolve(),\n};\n"]},"metadata":{},"sourceType":"module"}