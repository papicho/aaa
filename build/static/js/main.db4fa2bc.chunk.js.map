{"version":3,"sources":["Resources/unknown.png","Resources/Checkpoint.js","Resources/demo.js","Resources/User.js","Resources/authProvider.js","Resources/dataProvider.js","Resources/dataProviderWrapper.js","App.js","index.js"],"names":["module","exports","CheckpointsActiveField","props","record","active","Checkpoints","resourceName","resource","Resource","name","list","List","Datagrid","rowClick","title","TextField","source","edit","Edit","SimpleForm","TextInput","create","Create","options","label","useStyles","makeStyles","width","height","margin","fullList","TemporaryDrawer","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","type","key","map","Fragment","Button","onClick","Drawer","onClose","className","clsx","role","onKeyDown","text","index","Avatar","src","pic","Divider","theme","root","display","spacing","small","large","Users","EmailField","SelectInput","choices","id","TabbedShowLayout","Tab","path","ImageInput","accept","ImageField","login","a","username","password","request","Request","method","body","JSON","stringify","email","headers","Headers","console","log","fetch","then","response","status","Error","statusText","json","token","localStorage","setItem","logout","removeItem","Promise","resolve","checkError","reject","checkAuth","getItem","getPermissions","dataProvider","jsonServerProvider","url","user","authenticated","fetchUtils","fetchJson","dataProviderWrapper","getList","params","result","newData","data","forEach","push","_id","building","checkpointType","floor","neighbors","school","location","country","city","total","length","getMany","updateMany","delete","deleteMany","getManyReference","pagination","page","perPage","sort","field","order","filter","target","httpClient","zebi","parseInt","get","split","pop","getOne","hasOwnProperty","update","App","Admin","authProvider","Resources","ReactDOM","render","document","getElementById","rootElement"],"mappings":"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","file":"static/js/main.db4fa2bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unknown.ef288af2.png\";","import React from \"react\";\nimport {\n  Resource,\n  List,\n  Datagrid,\n  TextField,\n  ArrayField,\n  ArrayInput,\n  Edit,\n  SimpleForm,\n  TextInput,\n  Create\n} from \"react-admin\";\nimport Button from '@material-ui/core/Button';\n\nconst CheckpointsActiveField = props => {\n  if (!props.record) {\n    return null;\n  }\n  if (props.record.active) {\n    return <div>Active</div>;\n  }\n  return <div>Not Active</div>;\n};\n\nconst CheckpointsList = props => (\n  \n  <List {...props} >\n    <Datagrid rowClick=\"edit\" title=\"Post edition\">\n      <TextField source=\"name\" />\n      <TextField source=\"building\" />\n      <TextField source=\"checkpointType\" />\n      <TextField source=\"floor\" />\n      <TextField source=\"school\" />\n      <TextField source=\"country\" />\n      <TextField source=\"city\" />\n      <TextField source=\"neighbors\" />\n    </Datagrid>\n  </List>\n);\n\n// add this to Edit below to avoid the problem\n//<BooleanInput source=\"active\" />\nconst CheckpointsEdit = props => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput source=\"name\" />\n      <TextInput source=\"building\" />\n      <TextInput source=\"checkpointType\" />\n      <TextInput source=\"floor\" />\n      <TextInput source=\"school\" />\n      <TextInput source=\"country\" />\n      <TextInput source=\"city\" />\n      <TextInput source=\"neighbors\" />\n      <CheckpointsActiveField />\n    </SimpleForm>\n  </Edit>\n);\n\nconst CheckpointsCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n      <TextInput source=\"name\" />\n      <TextInput source=\"building\" />\n      <TextInput source=\"checkpointType\" />\n      <TextInput source=\"floor\" />\n      <TextInput source=\"school\" />\n      <TextInput source=\"country\" />\n      <TextInput source=\"city\" />\n      <TextInput source=\"neighbors\" />\n    </SimpleForm>\n  </Create>\n);\n\nconst Checkpoints = {\n  resourceName: \"checkpoints\",\n  resource: (\n    <Resource\n      name=\"checkpoint\"\n      list={CheckpointsList}\n      edit={CheckpointsEdit}\n      create={CheckpointsCreate}\n      options={{ label: \"Checkpoints\" }}\n    />\n  )\n};\n\nexport default Checkpoints;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport pic from \"./unknown.png\"\n\nconst useStyles = makeStyles({\n  list: {\n    width: 300,\n    height: 400,\n    margin: 10,\n  },\n  fullList: {\n    width: 'auto',\n    height: 40,\n  },\n});\n\nexport default function TemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {['Picture'].map((text, index) => (\n            <Avatar src={pic} className={classes[\"list\"]} />\n        ))}\n      </List>\n      <Divider />\n    </div>\n  );\n\n  return (\n    <div>\n      {['Picture'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n//          <ListItem button key={text}>\n//          </ListItem>\n","import React from \"react\";\nimport {\n  Resource,\n  List,\n  Datagrid,\n  ImageInput,\n  ImageField,\n  TextField,\n  ArrayField,\n  ArrayInput,\n  Edit,\n  SimpleForm,\n  Show,\n  TextInput,\n  TabbedShowLayout,\n  Tab,\n  EmailField,\n  RichTextField,\n  DateField,\n  NumberField,\n  BooleanField,\n  ReferenceManyField,\n  EditButton,\n  ReferenceArrayInput,\n  ReferenceInput,\n  SelectInput,\n  SelectArrayInput,\n  Create\n} from \"react-admin\";\n\nimport {  } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Demo from './demo';\n\nimport pic from \"./unknown.png\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n}));\n\n\n\nconst UsersActiveField = props => {\n  if (!props.record) {\n    return null;\n  }\n  if (props.record.active) {\n    return <div>Active</div>;\n  }\n  return <div>Not Active</div>;\n};\n\nconst UsersList = props => (\n  <List {...props}>\n    <Datagrid rowClick=\"edit\">\n      <TextField source=\"id\" />\n      <EmailField source=\"email\" />\n      <TextField source=\"role\" />\n      <TextField source=\"school\" />\n    </Datagrid>\n  </List>\n);\n\n// add this to Edit below to avoid the problem\n//<BooleanInput source=\"active\" />\nconst UsersEdit = props => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput source=\"email\" />\n      <TextInput source=\"school\" />\n      <SelectInput source=\"role\" choices={[\n    { id: 'STAFF', name: 'Staff' },\n    { id: 'STUDENT', name: 'Student' },\n]} />\n\n    </SimpleForm>\n  </Edit>\n);\n\nconst UsersCreate = props => (\n\n  <Create {...props}>\n    <SimpleForm>\n    <Demo />\n  <TabbedShowLayout>\n              <Tab label=\"summary\">\n              <TextInput source=\"email\" />\n              <TextInput type=\"password\" source=\"password\"/>\n              </Tab>\n              <Tab label=\"Picture\" path=\"body\">\n              <Avatar src={pic} className={useStyles(\"large\")} />\n              <ImageInput source=\"pictures\" label=\"Related pictures\" accept=\"image/*\">\n                <ImageField source=\"src\" title=\"title\" />\n            </ImageInput>\n              </Tab>\n          </TabbedShowLayout>\n    </SimpleForm>\n  </Create>\n);\n\nconst Users = {\n  resourceName: \"users\",\n  resource: (\n    <Resource\n      name=\"user\"\n      list={UsersList}\n      edit={UsersEdit}\n      create={UsersCreate}\n      options={{ label: \"Users\" }}\n    />\n  )\n};\n\nexport default Users;\n//<UsersActiveField />\n","\n// in src/authProvider.js\nexport default {\n    // called when the user attempts to log in\n    login: async ({ username, password }) => {\n        const request = new Request('https://findar-api-staging.herokuapp.com/user/login', {\n            method: 'POST',\n            body: JSON.stringify({ email: username, password }),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        });\n        console.log(username);\n        console.log(password);\n        //var fn = (username.match(/First Name:\\s*(.+)\\s+Last Name/i))[1]\n        //localStorage.setItem('fn', fn);\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then(({ token }) => {\n                localStorage.setItem('token', token);\n\n                console.log(token);\n\n            });\n\n    },\n    // called when the user clicks on the logout button\n    logout: () => {\n        localStorage.removeItem('username');\n        localStorage.removeItem('token');\n\n        return Promise.resolve();\n    },\n    // called when the API returns an error\n    checkError: ({ status }) => {\n        if (status === 401 || status === 403) {\n            localStorage.removeItem('username');\n            return Promise.reject();\n        }\n        return Promise.resolve();\n    },\n    // called when the user navigates to a new location, to check for authentication\n    checkAuth: () => {\n        return localStorage.getItem('token')\n            ? Promise.resolve()\n            : Promise.reject();\n    },\n    // called when the user navigates to a new location, to check for permissions / roles\n    getPermissions: () => Promise.resolve(),\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Admin, Resource, fetchUtils } from \"react-admin\";\nimport jsonServerProvider from \"ra-data-json-server\";\n\n\nconst httpClient = (url, options = {}) => {\n    options.user = {\n        authenticated: true,\n        token: 'Bearer ' + localStorage.getItem('token')\n    };\n    console.log(localStorage.getItem('token'))\n    return fetchUtils.fetchJson(url, options);\n};\n\n\nconst dataProvider = jsonServerProvider(\n  \"https://findar-api-staging.herokuapp.com\",httpClient\n);\n\nexport default dataProvider;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Admin, Resource, fetchUtils } from \"react-admin\";\nimport jsonServerProvider from \"ra-data-json-server\";\nimport dataProvider from './dataProvider';\n\n\nconst dataProviderWrapper = {\n  getList: (resource, params) => {\n    console.log(resource)\n    console.log(\"PARAMS ARE : \")\n    console.log(params)\n    if (resource == \"checkpoint\")\n    {\n        return dataProvider.getList(resource, params).then(result => {\n          /**\n           * filtering data to only return only certain fields\n           * imagine I have a custom data provider that runs on top of graphql\n           * and only returns certain fields in getList\n           */\n          const newData = [];\n          result.data.forEach(record => {\n            newData.push({\n              id: record._id,\n              name: record.name,\n              building: record.building,\n              checkpointType: record.checkpointType,\n              floor: record.floor,\n              neighbors: record.neighbors,\n              school: record.location.school,\n              country: record.location.country,\n              city: record.location.city\n            });\n          });\n          console.log(`Data returned from data provider in getList:`);\n          console.log(JSON.stringify(newData, null, 8));\n          return { data: newData, total: newData.length };\n        });\n    }\n    else if (resource == \"user\")\n    {\n        return dataProvider.getList(resource, params).then(result => {\n          /**\n           * filtering data to only return only certain fields\n           * imagine I have a custom data provider that runs on top of graphql\n           * and only returns certain fields in getList\n           */\n          const newData = [];\n          result.data.forEach(record => {\n            newData.push({\n              id: record._id,\n              email: record.email,\n              school: record.school,\n              role: record.role\n            });\n          });\n          console.log(\"ressource =====\")\n          console.log(resource)\n          console.log(`Data returned from data provider in getList:`);\n          console.log(JSON.stringify(newData, null, 8));\n          return { data: newData, total: newData.length };\n        });\n    }\n  },\n  getMany: (resource, params) => dataProvider.getMany(resource, params),\n  updateMany: (resource, params) => dataProvider.updateMany(resource, params),\n  create: (resource, params) => {\n    console.log(\"param de create :\");\n    console.log(params);\n    resource = resource + \"/signup\"\n    return dataProvider.create(resource, params)\n  },\n  delete: (resource, params) => dataProvider.delete(resource, params),\n  deleteMany: (resource, params) => dataProvider.deleteMany(resource, params),\n\n\n\n\n\n\n\n      getManyReference: (resource, params) => {\n          const { page, perPage } = params.pagination;\n          const { field, order } = params.sort;\n          const query = {\n              sort: JSON.stringify([field, order]),\n              range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n              filter: JSON.stringify({\n                  ...params.filter,\n                  [params.target]: params.id,\n              }),\n          };\n          const apiUrl = \"https://findar-api-staging.herokuapp.com\"\n          const url = `${apiUrl}/${resource}`;\n          //const url = `${apiUrl}/${resource}?floor=2`;\n\n          return dataProvider.httpClient(url).then(({ headers, json }) => ({\n              zebi: json,\n              total: parseInt(headers.get('content-range').split('/').pop(), 10),\n          }));\n      },\n  getOne: (resource, params) => {\n    console.log(\"LES PARAMETRE de GETONE SONT \")\n    console.log(params)\n    if (resource == \"user\" && params.hasOwnProperty('id') )\n    {  resource = resource + \"/profile\"  }\n    return dataProvider.getOne(resource, params).then(result => {\n      const location = [];\n      const newData = {\n        id: result.data._id,\n        email: result.data.email,\n        school: result.data.school,\n      };\n      console.log(`Data returned from data provider in getoooooooooOne:`);\n      console.log(JSON.stringify(newData, null, 8));\n      return { data: newData };\n    });\n  },\n  update: (resource, params) => {\n    console.log(\"SA REEEENTRE\")\n    console.log(\"Data provided by react-admin to data provider:\");\n    console.log(JSON.stringify(params, null, 8));\n    resource = resource + \"/profile\"\n    return dataProvider.update(resource, params);\n  }\n};\n\nexport default dataProviderWrapper;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Admin, TextField, Resource, fetchUtils } from \"react-admin\";\nimport jsonServerProvider from \"ra-data-json-server\";\n\nimport * as Resources from \"./Resources\";\nimport authProvider from './Resources/authProvider';\nimport dataProvider from './Resources/dataProvider';\nimport dataProviderWrapper from './Resources/dataProviderWrapper';\nimport Typography from '@material-ui/core/Typography';\n\nconst App = () => (\n  <Admin authProvider={authProvider} dataProvider={dataProviderWrapper}>\n    {Resources.Checkpoints.resource}\n    {Resources.Users.resource}\n  </Admin>\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}